[{"content":"Wireshark Port Filter vs Protocol Filter When analyzing network traffic using Wireshark, it\u0026rsquo;s crucial to understand the difference between the filters to effectively isolate and examine relevant data.\nWe will discuss on the basis of port 80 filter and HTTP filter. Because HTTP itself uses the port 80. So, their will be some key difference when using these two filters.\nPort Filter: For this filter specifically targets traffic on ports. On this case port 80, which is the standard port for HTTP communication. Use this filter when you want to focus solely on TCP connections established on port 80. It captures the entire TCP communication process, including TCP handshakes, acknowledgments, and data transfers. This filter is useful for gaining insights into low-level TCP interactions. Applying filter for port 80\nProtocol Filter: Unlike Port filter the Protocol filter is higher-level and specifically targets a specific protocol. In this case HTTP traffic, irrespective of the port number. It captures HTTP requests and responses, including the payload data exchanged between the client and the server. However, it does not include TCP handshakes or other lower-level TCP details. Use this filter when you\u0026rsquo;re interested in analyzing HTTP traffic at the application layer, focusing on HTTP headers, contents, and responses. Applying filter for HTTP protocol\nWhen to Use:\nUse \u0026ldquo;tcp.port==80\u0026rdquo; when you need detailed insights into TCP interactions, including handshakes, acknowledgments, and data transfers, specifically on port 80. Use http when you want to focus on HTTP traffic, examining HTTP requests, responses, and payload data, irrespective of the port number. Some other protocols and ports are: FTP (File Transfer Protocol) - Port 21 SSH (Secure Shell) - Port 22 SNMP - Port Number: 161 (SNMP), 162 (SNMP traps) RDP - Port 3389\nUnderstanding these filters\u0026rsquo; distinctions enables efficient and targeted analysis of network traffic in Wireshark. Some\n","permalink":"http://localhost:60822/Wireshark-Port-Filter-vs-Protocol-Filter/","summary":"Wireshark Port Filter vs Protocol Filter When analyzing network traffic using Wireshark, it\u0026rsquo;s crucial to understand the difference between the filters to effectively isolate and examine relevant data.\nWe will discuss on the basis of port 80 filter and HTTP filter. Because HTTP itself uses the port 80. So, their will be some key difference when using these two filters.\nPort Filter: For this filter specifically targets traffic on ports. On this case port 80, which is the standard port for HTTP communication.","title":"Wireshark Port Filter vs Protocol Filter"},{"content":"Introduction AutoCAD provides several function key shortcuts (F1 through F12), each of which is associated with a specific command or action. These shortcuts are designed to expedite your workflow and reduce the need to navigate through menus and toolbars constantly. Let\u0026rsquo;s delve into the most commonly used function key shortcuts and their corresponding functions.\nKey Combinations F1 - Help F1 is the universal Help key in most software applications, including AutoCAD. Pressing F1 brings up context-sensitive help, allowing you to quickly access information about the tool or command you\u0026rsquo;re using. It\u0026rsquo;s a valuable resource for learning and troubleshooting. F2 - Command Window F2 opens the Text Window, which displays a log of your recent commands and their results. This can be incredibly helpful for reviewing your actions and identifying any errors or issues. F3 - Object Snap F3 toggles Object Snap mode on and off. Object Snap helps you precisely locate and snap to specific points on objects, such as endpoints, midpoints, and intersections, enhancing accuracy in your drawings. F4 - 3D Object Snap F4 toggles 3D Object Snap mode, which is particularly useful when working with 3D models. It allows you to snap to 3D points and coordinates. Not needed in 2D drawing. F5 - Isometric Drafting F5 switches between the different isometric drafting planes (Left, Top, Right). This is essential for creating 3D drawings with ease. F6 - Dynamic UCS F6 activates Dynamic UCS (User Coordinate System), which adapts the UCS to the geometry you are working on. This simplifies drawing in different orientations.\nTo return to the standard World UCS, simply press F6 again or type \u0026ldquo;UCS\u0026rdquo; and press Enter to deactivate Dynamic UCS. Dynamic UCS is a valuable tool for anyone working with 3D models. F7 - Grid Display F7 toggles the display of the grid on and off. The grid can be useful for aligning objects and maintaining consistency in your drawings. F8 - Ortho Mode F8 enables Ortho mode, restricting cursor movement to horizontal and vertical lines only. This is invaluable for maintaining alignment and precision. F9 - Snap Mode F9 activates Snap mode, allowing you to snap to specified increments or angles. It helps you maintain accuracy while drawing and aligning objects. F10 - Polar Tracking F10 turns on Polar Tracking, which assists in drawing lines at specific angles relative to the cursor\u0026rsquo;s current position. F11 - Object Snap Tracking F11 activates Object Snap Tracking, which allows you to track along specific object snap points, making it easier to create accurate geometry. F12 - Dynamic Input F12 toggles Dynamic Input on and off. Dynamic Input displays command prompts and options near the cursor, enhancing command execution efficiency. Conclusion In the world of AutoCAD, time is of the essence. Function key shortcuts are invaluable tools for streamlining your workflow and increasing your productivity.\n","permalink":"http://localhost:60822/AutoCad-Function-Key-Shortcut/","summary":"Introduction AutoCAD provides several function key shortcuts (F1 through F12), each of which is associated with a specific command or action. These shortcuts are designed to expedite your workflow and reduce the need to navigate through menus and toolbars constantly. Let\u0026rsquo;s delve into the most commonly used function key shortcuts and their corresponding functions.\nKey Combinations F1 - Help F1 is the universal Help key in most software applications, including AutoCAD.","title":"AutoCad Function Key Shortcut"},{"content":"Introduction Linux commands are the building blocks for managing and interacting with the Linux operating system. Whether you\u0026rsquo;re a seasoned system administrator or a beginner exploring the world of Linux, understanding these essential commands is crucial. In this article, we\u0026rsquo;ll delve into 50 important Linux commands, complete with practical examples to help you grasp their utility.\nNote: Be cautious when running commands with administrative privileges (e.g., sudo) to avoid making unintended changes to your system.\ncommands ls - List files and directories.\nls /home/user/documents cd - Change the current directory.\ncd /var/www/html pwd - Print the current working directory.\npwd mkdir - Create a new directory.\nmkdir new_directory rmdir - Remove an empty directory.\nrmdir empty_directory touch - Create a new empty file or update a file\u0026rsquo;s timestamp.\ntouch new_file.txt rm - Remove files or directories.\nrm file.txt rm -r directory/ cp - Copy files and directories.\ncp file.txt new_directory/ mv - Move or rename files and directories.\nmv file.txt new_name.txt cat - Concatenate and display file content.\ncat file.txt more and less - View file content page by page.\nmore file.txt less large_file.log head and tail - Display the beginning or end of a file.\nhead file.txt tail log_file.log nano and vim - Text editors for creating and editing files.\nnano new_file.txt vim existing_file.txt grep - Search for patterns in files.\ngrep \u0026#34;pattern\u0026#34; file.txt find - Search for files and directories.\nfind /home/user -name \u0026#34;*.txt\u0026#34; chmod - Change file permissions.\nchmod 644 file.txt chown - Change file ownership.\nchown user:group file.txt df - Display disk space usage.\ndf -h du - Display file and directory space usage.\ndu -sh /var top and htop - Monitor system processes.\ntop htop ps - Display information about running processes.\nps aux kill - Terminate processes.\nkill process_id ping - Check network connectivity.\nping google.com ifconfig and ip - Network configuration tools.\nifconfig ip addr show ssh - Securely connect to remote servers.\nssh user@remote_server scp - Securely copy files between systems.\nscp file.txt user@remote_server:/path/to/destination/ tar - Archive and compress files.\ntar -cvzf archive.tar.gz directory/ gzip and gunzip - Compress and decompress files.\ngzip file.txt gunzip file.txt.gz wget and curl - Download files from the internet.\nwget https://example.com/file.zip curl -O https://example.com/image.jpg date - Display or set the system date and time.\ndate date -s \u0026#34;2023-09-04 14:30:00\u0026#34; cal - Display a calendar.\ncal history - View command history.\nhistory alias - Create shortcut commands.\nalias ll=\u0026#39;ls -al\u0026#39; sudo - Execute commands with superuser privileges.\nsudo apt update passwd - Change user password.\npasswd useradd and userdel - Add and delete user accounts.\nsudo useradd newuser sudo userdel olduser groupadd and groupdel - Manage user groups.\nsudo groupadd mygroup sudo groupdel mygroup shutdown and reboot - Shutdown or restart the system.\nsudo shutdown -h now sudo reboot df - Display disk space usage.\ndf -h du - Display file and directory space usage.\ndu -sh /var quota - Manage disk quotas for users.\nquota -u user scp - Securely copy files between systems.\nscp file.txt user@remote_server:/path/to/destination/ dd - Copy and convert files.\ndd if=input_file of=output_file bs=4M lsof - List open files and processes.\nlsof -i :80 nc - Network utility for reading from and writing to network connections.\nnc -l -p 12345 at and cron - Schedule tasks.\nat now + 1 hour crontab -e killall - Terminate processes by name.\nkillall process_name mount and umount - Mount and unmount file systems.\nmount /dev/sdX1 /mnt umount /mnt fdisk and parted - Partition management tools.\nfdisk -l parted /dev/sdX Conclusion These 50 essential Linux commands form the foundation of your Linux journey. By mastering these commands and understanding their usage through practical examples, you’ll be better equipped to manage your Linux system efficiently, troubleshoot issues, and perform various tasks with ease. Continue to explore and experiment with these commands to unlock the full potential of Linux.\n","permalink":"http://localhost:60822/Fifty-Useful-Linux-Commands-Part-One/","summary":"Introduction Linux commands are the building blocks for managing and interacting with the Linux operating system. Whether you\u0026rsquo;re a seasoned system administrator or a beginner exploring the world of Linux, understanding these essential commands is crucial. In this article, we\u0026rsquo;ll delve into 50 important Linux commands, complete with practical examples to help you grasp their utility.\nNote: Be cautious when running commands with administrative privileges (e.g., sudo) to avoid making unintended changes to your system.","title":"Fifty Useful Linux Commands Part One"},{"content":"Introduction After part one we will look into more linux commands to enhance our use of commandline and troubleshoot any problems.\nln - Create hard or symbolic links to files.\nln -s /path/to/source/file link_name uptime - Display system uptime and load averages.\nuptime who - Display information about logged-in users.\nwho whatis - Display one-line manual page descriptions.\nwhatis command_name chroot - Change the root directory for a command.\nchroot /new/root /bin/bash which - Display the path of an executable.\nwhich command_name uptime - Display system uptime and load averages.\nuptime nmcli - Command-line client for NetworkManager.\nnmcli connection show rsync - Sync files and directories between systems.\nrsync -avz source/ destination/ cut - Remove sections from lines of files.\ncut -d, -f2 file.csv sed - Stream editor for text manipulation. sed \u0026#39;s/old_text/new_text/\u0026#39; file.txt awk - Text processing tool for data extraction. awk \u0026#39;{print $1}\u0026#39; file.txt sort - Sort lines of text files. sort file.txt uniq - Remove duplicate lines from sorted files. sort file.txt | uniq diff - Compare files line by line. diff file1.txt file2.txt tar - Archive and compress files. tar -cvzf archive.tar.gz directory/ crontab - Schedule repetitive tasks using cron. crontab -l crontab -e wget - Download files from the internet. wget https://example.com/file.zip curl - Transfer data to/from servers. curl -O https://example.com/image.jpg zip and unzip - Create and extract compressed zip archives. zip archive.zip file1.txt file2.txt ps - Display information about running processes. ps aux kill - Terminate processes. kill process_id killall - Terminate processes by name. killall process_name nice - Adjust process priority. nice -n 10 command renice - Change the priority of a running process. renice -n 5 -p process_id whereis - Locate the binary, source, and manual page files for a command. whereis command_name alias - Create shortcut commands. alias ll=\u0026#39;ls -al\u0026#39; file - Determine file type. file file.txt df - Display disk space usage. df -h du - Display file and directory space usage. du -sh /var quota - Manage disk quotas for users. quota -u user ssh-keygen - Generate SSH key pairs. ssh-keygen -t rsa ssh-copy-id - Copy SSH keys to a remote server. ssh-copy-id user@remote_server scp - Securely copy files between systems. scp file.txt user@remote_server:/path/to/destination/ ping - Check network connectivity. ping google.com traceroute - Trace the route packets take to a destination. traceroute google.com netstat - Display network connections, routing tables, interface statistics, masquerade connections, and multicast memberships. netstat -tuln ss - Display socket statistics. ss -tuln route - Display and manipulate IP routing table. route -n hostname - Display or set the system\u0026rsquo;s host name. hostname history - View command history. history shutdown and reboot - Shutdown or restart the system. sudo shutdown -h now sudo reboot file - Determine file type. file file.txt lsblk - List block devices. lsblk parted - Disk partitioning tool. parted /dev/sdX nmcli - Command-line client for NetworkManager. nmcli connection show useradd and userdel - Add and delete user accounts. sudo useradd newuser sudo userdel olduser groupadd and groupdel - Manage user groups. sudo groupadd mygroup sudo groupdel mygroup w - Show who is logged on and what they are doing. w chsh - Change login shell. chsh -s /bin/bash username Conclusion With these 50 additional Linux commands and examples, you can expand your knowledge and enhance your proficiency in managing and working with Linux systems. These commands cover a wide range of tasks, from text processing and file manipulation to network diagnostics and system administration. Continue to explore and experiment with these commands to become a more skilled Linux user.\n","permalink":"http://localhost:60822/Fifty-Useful-Linux-Commands-Part-Two/","summary":"Introduction After part one we will look into more linux commands to enhance our use of commandline and troubleshoot any problems.\nln - Create hard or symbolic links to files.\nln -s /path/to/source/file link_name uptime - Display system uptime and load averages.\nuptime who - Display information about logged-in users.\nwho whatis - Display one-line manual page descriptions.\nwhatis command_name chroot - Change the root directory for a command.\nchroot /new/root /bin/bash which - Display the path of an executable.","title":"Fifty Useful Linux Commands Part Two"},{"content":"Requirment needed to run Yacht or Portainer (Ubuntu) All we need to run yacht or Portainer to manage our docker container is docker itself. According to docker official documnetation we need to do the following.\nFirst command\nsudo apt-get update\rsudo apt-get install ca-certificates curl gnupg This will allow apt install over HTTPS.\nSecond command\nsudo install -m 0755 -d /etc/apt/keyrings\rcurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\rsudo chmod a+r /etc/apt/keyrings/docker.gpg This will add docker GPG keyrings for safety purpose.\nThird command\necho \\\r\u0026#34;deb [arch=\u0026#34;$(dpkg --print-architecture)\u0026#34; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\r\u0026#34;$(. /etc/os-release \u0026amp;\u0026amp; echo \u0026#34;$VERSION_CODENAME\u0026#34;)\u0026#34; stable\u0026#34; | \\\rsudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null This will add the docker repository to apt.\nFourth command\nsudo apt-get update This will update the repository and index the docker repository.\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin Fifth command\nsudo systemctl enable docker This will auto start docker on reboot.\nInstall Yacht To install Yacht run this command\nsudo docker volume create yacht\rsudo docker run -d -p 8000:8000 -v /var/run/docker.sock:/var/run/docker.sock -v yacht:/config --name yacht selfhostedpro/yacht The following command starts a yacht container and configures it to always restart unless it is explicitly stopped or Docker is restarted.\nsudo docker run -d --restart unless-stopped yacht sudo docker update --restart unless-stopped yacht Now that the installation is complete, you can log into your Yacht Server instance by opening a web browser and going to:\nhttps://Local_PC_IP_Address:8000 Install Portainer To install Portainer run these commands after docker is installed.\nsudo docker volume create portainer_data sudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest This will install Portainer and make it restart always after boot.\nNow that the installation is complete, you can log into your Portainer Server instance by opening a web browser and going to:\nhttps://localhost:9443 For more documnetation see Portainer \u0026amp; Yacht\n","permalink":"http://localhost:60822/How-to-Run-Yacht-or-Portainer-on-Ubuntu/","summary":"Requirment needed to run Yacht or Portainer (Ubuntu) All we need to run yacht or Portainer to manage our docker container is docker itself. According to docker official documnetation we need to do the following.\nFirst command\nsudo apt-get update\rsudo apt-get install ca-certificates curl gnupg This will allow apt install over HTTPS.\nSecond command\nsudo install -m 0755 -d /etc/apt/keyrings\rcurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\rsudo chmod a+r /etc/apt/keyrings/docker.","title":"How to Run Yacht or Portainer on Ubuntu"},{"content":"Set-ExecutionPolicy Sets the PowerShell execution policies for Windows computers.\nSyntax Set-ExecutionPolicy\r[-ExecutionPolicy] \u0026lt;ExecutionPolicy\u0026gt;\r[[-Scope] \u0026lt;ExecutionPolicyScope\u0026gt;]\r[-Force]\r[-WhatIf]\r[-Confirm]\r[\u0026lt;CommonParameters\u0026gt;] Description The Set-ExecutionPolicy cmdlet changes PowerShell execution policies for Windows computers. For more information, see about_Execution_Policies.\nBeginning in PowerShell 6.0 for non-Windows computers, the default execution policy is Unrestricted and can\u0026rsquo;t be changed. The Set-ExecutionPolicy cmdlet is available, but PowerShell displays a console message that it\u0026rsquo;s not supported.\nAn execution policy is part of the PowerShell security strategy. Execution policies determine whether you can load configuration files, such as your PowerShell profile, or run scripts. And, whether scripts must be digitally signed before they are run.\nThe Set-ExecutionPolicy cmdlet\u0026rsquo;s default scope is LocalMachine, which affects everyone who uses the computer. To change the execution policy for LocalMachine, start PowerShell with Run as Administrator.\nTo display the execution policies for each scope in the order of precedence, use Get-ExecutionPolicy -List. To see the effective execution policy for your PowerShell session use Get-ExecutionPolicy with no parameters.\nExamples Example 1: Set an execution policy This example shows how to set the execution policy for the local computer.\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine\rGet-ExecutionPolicy -List\rScope ExecutionPolicy\r----- ---------------\rMachinePolicy Undefined\rUserPolicy Undefined\rProcess Undefined\rCurrentUser RemoteSigned\rLocalMachine RemoteSigned The Set-ExecutionPolicy cmdlet uses the ExecutionPolicy parameter to specify the RemoteSigned policy. The Scope parameter specifies the default scope value, LocalMachine. To view the execution policy settings, use the Get-ExecutionPolicy cmdlet with the List parameter.\nExample 2: Set an execution policy that conflicts with a Group Policy This command attempts to set the LocalMachine scope\u0026rsquo;s execution policy to Restricted. LocalMachine is more restrictive, but isn\u0026rsquo;t the effective policy because it conflicts with a Group Policy. The Restricted policy is written to the registry hive HKEY_LOCAL_MACHINE.\nPS\u0026gt; Set-ExecutionPolicy -ExecutionPolicy Restricted -Scope LocalMachine\rSet-ExecutionPolicy : PowerShell updated your local preference successfully, but the setting is\roverridden by the Group Policy applied to your system. Due to the override, your shell will retain\rits current effective execution policy of \u0026#34;AllSigned\u0026#34;. Contact your Group Policy administrator for\rmore information. At line:1 char:20 + Set-ExecutionPolicy \u0026lt;\u0026lt;\u0026lt;\u0026lt; restricted\rPS\u0026gt; Get-ChildItem -Path HKLM:\\SOFTWARE\\Microsoft\\PowerShell\\1\\ShellIds\rHive: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\PowerShell\\1\\ShellIds\rName Property\r---- --------\rMicrosoft.PowerShell Path : C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\rExecutionPolicy : Restricted\rScriptedDiagnostics ExecutionPolicy : Unrestricted The Set-ExecutionPolicy cmdlet uses the ExecutionPolicy parameter to specify the Restricted policy. The Scope parameter specifies the default scope value, LocalMachine. The Get-ChildItem cmdlet uses the Path parameter with the HKLM provider to specify registry location.\nExample 3: Apply the execution policy from a remote computer to a local computer This command gets the execution policy object from a remote computer and sets the policy on the local computer. Get-ExecutionPolicy sends a Microsoft.PowerShell.ExecutionPolicy object down the pipeline. Set-ExecutionPolicy accepts pipeline input and doesn\u0026rsquo;t require the ExecutionPolicy parameter.\nPS\u0026gt; Invoke-Command -ComputerName Server01 -ScriptBlock { Get-ExecutionPolicy } | Set-ExecutionPolicy The Invoke-Command cmdlet is executed at the local computer and sends the ScriptBlock to the remote computer. The ComputerName parameter specifies the remote computer, Server01. The ScriptBlock parameter runs Get-ExecutionPolicy on the remote computer. The Get-ExecutionPolicy object is sent down the pipeline to the Set-ExecutionPolicy. Set-ExecutionPolicy applies the execution policy to the local computer\u0026rsquo;s default scope, LocalMachine.\nExample 4: Set the scope for an execution policy This example shows how to set an execution policy for a specified scope, CurrentUser. The CurrentUser scope only affects the user who sets this scope.\nSet-ExecutionPolicy -ExecutionPolicy AllSigned -Scope CurrentUser\rGet-ExecutionPolicy -List\rScope ExecutionPolicy\r----- ---------------\rMachinePolicy Undefined\rUserPolicy Undefined\rProcess Undefined\rCurrentUser AllSigned\rLocalMachine RemoteSigned Set-ExecutionPolicy uses the ExecutionPolicy parameter to specify the AllSigned policy. The Scope parameter specifies the CurrentUser. To view the execution policy settings, use the Get-ExecutionPolicy cmdlet with the List parameter.\nThe effective execution policy for the user becomes AllSigned.\nExample 5: Remove the execution policy for the current user This example shows how use the Undefined execution policy to remove an execution policy for a specified scope.\nSet-ExecutionPolicy -ExecutionPolicy Undefined -Scope CurrentUser\rGet-ExecutionPolicy -List\rScope ExecutionPolicy\r----- ---------------\rMachinePolicy Undefined\rUserPolicy Undefined\rProcess Undefined\rCurrentUser Undefined\rLocalMachine RemoteSigned Set-ExecutionPolicy uses the ExecutionPolicy parameter to specify the Undefined policy. The Scope parameter specifies the CurrentUser. To view the execution policy settings, use the Get-ExecutionPolicy cmdlet with the List parameter.\nExample 6: Set the execution policy for the current PowerShell session The Process scope only affects the current PowerShell session. The execution policy is saved in the environment variable $env:PSExecutionPolicyPreference and is deleted when the session is closed.\nSet-ExecutionPolicy -ExecutionPolicy AllSigned -Scope Process\rScope ExecutionPolicy\r----- ---------------\rMachinePolicy Undefined\rUserPolicy Undefined\rProcess AllSigned\rCurrentUser RemoteSigned\rLocalMachine RemoteSigned The Set-ExecutionPolicy uses the ExecutionPolicy parameter to specify the AllSigned policy. The Scope parameter specifies the value Process. To view the execution policy settings, use the Get-ExecutionPolicy cmdlet with the List parameter.\nExample 7: Unblock a script to run it without changing the execution policy This example shows how the RemoteSigned execution policy prevents you from running unsigned scripts.\nA best practice is to read the script\u0026rsquo;s code and verify it\u0026rsquo;s safe before using the Unblock-File cmdlet. The Unblock-File cmdlet unblocks scripts so they can run, but doesn\u0026rsquo;t change the execution policy.\nPS\u0026gt; Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine\rPS\u0026gt; Get-ExecutionPolicy\rRemoteSigned\rPS\u0026gt; .\\Start-ActivityTracker.ps1\r.\\Start-ActivityTracker.ps1 : File .\\Start-ActivityTracker.ps1 cannot be loaded.\rThe file .\\Start-ActivityTracker.ps1 is not digitally signed.\rThe script will not execute on the system.\rFor more information, see about_Execution_Policies at https://go.microsoft.com/fwlink/?LinkID=135170.\rAt line:1 char:1\r+ .\\Start-ActivityTracker.ps1\r+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r+ CategoryInfo : NotSpecified: (:) [], PSSecurityException\r+ FullyQualifiedErrorId : UnauthorizedAccess\rPS\u0026gt; Unblock-File -Path .\\Start-ActivityTracker.ps1\rPS\u0026gt; Get-ExecutionPolicy\rRemoteSigned\rPS\u0026gt; .\\Start-ActivityTracker.ps1\rTask 1: The Set-ExecutionPolicy uses the ExecutionPolicy parameter to specify the RemoteSigned policy. The policy is set for the default scope, LocalMachine.\nThe Get-ExecutionPolicy cmdlet shows that RemoteSigned is the effective execution policy for the current PowerShell session.\nThe Start-ActivityTracker.ps1 script is executed from the current directory. The script is blocked by RemoteSigned because the script isn\u0026rsquo;t digitally signed.\nFor this example, the script\u0026rsquo;s code was reviewed and verified as safe to run. The Unblock-File cmdlet uses the Path parameter to unblock the script.\nTo verify that Unblock-File didn\u0026rsquo;t change the execution policy, Get-ExecutionPolicy displays the effective execution policy, RemoteSigned.\nThe script, Start-ActivityTracker.ps1 is executed from the current directory. The script begins to run because it was unblocked by the Unblock-File cmdlet.\nParameters -Confirm Prompts you for confirmation before running the cmdlet.\nType: SwitchParameter Aliases: cf Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -ExecutionPolicy Specifies the execution policy. If there are no Group Policies and each scope\u0026rsquo;s execution policy is set to Undefined, then Restricted becomes the effective policy for all users.\nThe acceptable execution policy values are as follows:\nAllSigned. Requires that all scripts and configuration files are signed by a trusted publisher, including scripts written on the local computer. Bypass. Nothing is blocked and there are no warnings or prompts. Default. Sets the default execution policy. Restricted for Windows clients or RemoteSigned for Windows servers. RemoteSigned. Requires that all scripts and configuration files downloaded from the Internet are signed by a trusted publisher. The default execution policy for Windows server computers. Restricted. Doesn\u0026rsquo;t load configuration files or run scripts. The default execution policy for Windows client computers. Undefined. No execution policy is set for the scope. Removes an assigned execution policy from a scope that is not set by a Group Policy. If the execution policy in all scopes is Undefined, the effective execution policy is Restricted. Unrestricted. Beginning in PowerShell 6.0, this is the default execution policy for non-Windows computers and can\u0026rsquo;t be changed. Loads all configuration files and runs all scripts. If you run an unsigned script that was downloaded from the internet, you\u0026rsquo;re prompted for permission before it runs. Type: ExecutionPolicy Accepted values: AllSigned, Bypass, Default, RemoteSigned, Restricted, Undefined, Unrestricted Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -Force Suppresses all the confirmation prompts. Use caution with this parameter to avoid unexpected results.\nType: SwitchParameter Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Scope Specifies the scope that is affected by an execution policy. The default scope is LocalMachine.\nThe effective execution policy is determined by the order of precedence as follows:\nMachinePolicy. Set by a Group Policy for all users of the computer. UserPolicy. Set by a Group Policy for the current user of the computer. Process. Affects only the current PowerShell session. CurrentUser. Affects only the current user. LocalMachine. Default scope that affects all users of the computer. The Process scope only affects the current PowerShell session. The execution policy is saved in the environment variable $env:PSExecutionPolicyPreference, rather than the registry. When the PowerShell session is closed, the variable and value are deleted.\nExecution policies for the CurrentUser scope are written to the registry hive HKEY_LOCAL_USER.\nExecution policies for the LocalMachine scope are written to the registry hive HKEY_LOCAL_MACHINE.\nType: ExecutionPolicyScope Accepted values: CurrentUser, LocalMachine, MachinePolicy, Process, UserPolicy Position: 1 Default value: LocalMachine Accept pipeline input: True Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run.\nType: SwitchParameter Aliases: wi Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False Inputs ExecutionPolicy\nYou can pipe an execution policy object to this cmdlet.\nString\nYou can pipe a string that contains the name of an execution policy to this cmdlet.\nOutputs None\nThis cmdlet returns no output.\nNotes Set-ExecutionPolicy doesn\u0026rsquo;t change the MachinePolicy and UserPolicy scopes because they are set by Group Policies.\nSet-ExecutionPolicy doesn\u0026rsquo;t override a Group Policy, even if the user preference is more restrictive than the policy.\nIf the Group Policy Turn on Script Execution is enabled for the computer or user, the user preference is saved, but it is not effective. PowerShell displays a message that explains the conflict.\nabout_Execution_Policies about_Group_Policy_Settings about_Providers Get-AuthenticodeSignature Get-ChildItem Get-ExecutionPolicy Invoke-Command Set-AuthenticodeSignature Unblock-File ","permalink":"http://localhost:60822/Windows-Execution-Policy/","summary":"Set-ExecutionPolicy Sets the PowerShell execution policies for Windows computers.\nSyntax Set-ExecutionPolicy\r[-ExecutionPolicy] \u0026lt;ExecutionPolicy\u0026gt;\r[[-Scope] \u0026lt;ExecutionPolicyScope\u0026gt;]\r[-Force]\r[-WhatIf]\r[-Confirm]\r[\u0026lt;CommonParameters\u0026gt;] Description The Set-ExecutionPolicy cmdlet changes PowerShell execution policies for Windows computers. For more information, see about_Execution_Policies.\nBeginning in PowerShell 6.0 for non-Windows computers, the default execution policy is Unrestricted and can\u0026rsquo;t be changed. The Set-ExecutionPolicy cmdlet is available, but PowerShell displays a console message that it\u0026rsquo;s not supported.\nAn execution policy is part of the PowerShell security strategy.","title":"Windows Execution Policy"},{"content":"When we install windows fresh ownership of folders doesn\u0026rsquo;t change in git. As a result it throws ownership error. Which is something like this:\n\u0026#39;E:/Example\u0026#39; is owned by: \u0026#39;S-1-5-20-18634556-634524560-354234-1550\u0026#39; but the current user is: \u0026#39;S-1-5-20-3264345-30432434-3373425-1033\u0026#39; To add an exception for this directory, call: git config --global --add safe.directory E:/Hugo/Sites/blog-site This message indicates that the directory \u0026lsquo;E:/Hugo/Sites/blog-site\u0026rsquo; is owned by a different user than the current user, and Git is warning you about potential permission issues.\nIf you want to add an exception for this directory, you can use the command suggested in the message:\ngit config --global --add safe.directory E:/Example This command adds the specified directory to a list of safe directories that Git considers when detecting potential Git operations that may be unsafe.\nAlternatively, if you are the owner of the directory, you can change the ownership of the directory to your current user using the following command in the terminal:\nchown -R username:groupname E:/Example Replace \u0026ldquo;username\u0026rdquo; with your current username and \u0026ldquo;groupname\u0026rdquo; with your current group name. This command recursively changes the ownership of all files and subdirectories in the specified directory to the specified user and group.\nTo change the ownership of the directory to your current user, you should use your PC\u0026rsquo;s username.\nThe group name is a collection of users who share the same permissions for a particular file or directory. By default, when a new user is created in Linux or Unix-based systems, a group with the same name as the user is also created.\nYou can use the ls -l command on Linux or Unix-based systems to view the owner and group of a directory. The output of this command will show you the owner and group of the directory, like this:\n$ ls -l E:/Example\rdrwxr-xr-x 8 user1 staff 256 May 25 11:39 Example In this example, the owner of the \u0026lsquo;Example\u0026rsquo; directory is \u0026lsquo;user1\u0026rsquo;, and the group is \u0026lsquo;staff\u0026rsquo;.\nIf you are using Windows, you can check the owner of a directory by right-clicking on the directory and selecting \u0026lsquo;Properties\u0026rsquo;. Then, click on the \u0026lsquo;Security\u0026rsquo; tab, and you\u0026rsquo;ll see the current owner of the directory listed under the \u0026lsquo;Group or user names\u0026rsquo; section.\nTo change the ownership of the directory to your current user, you can use the takeown command in the Windows command prompt. Here\u0026rsquo;s an example command that changes the ownership of the \u0026lsquo;E:/Hugo/Sites/blog-site\u0026rsquo; directory to the current user:\ntakeown /f E:/Hugo/Sites/blog-site /r /d y This command recursively changes the ownership of all files and subdirectories in the specified directory to the current user. Make sure to use administrative privileges.\n","permalink":"http://localhost:60822/Ownership-Problem-with-Git-Solved/","summary":"When we install windows fresh ownership of folders doesn\u0026rsquo;t change in git. As a result it throws ownership error. Which is something like this:\n\u0026#39;E:/Example\u0026#39; is owned by: \u0026#39;S-1-5-20-18634556-634524560-354234-1550\u0026#39; but the current user is: \u0026#39;S-1-5-20-3264345-30432434-3373425-1033\u0026#39; To add an exception for this directory, call: git config --global --add safe.directory E:/Hugo/Sites/blog-site This message indicates that the directory \u0026lsquo;E:/Hugo/Sites/blog-site\u0026rsquo; is owned by a different user than the current user, and Git is warning you about potential permission issues.","title":"Ownership Problem With Git Solved"},{"content":"A computer is only powerful if a person use the computer in a powerful way. One of the powerful to navigate in windows is through shortcuts. Here are some time saving shortcuts that will make your workflow more productive.\nWindow Management Win-D: Minimizes all open windows and shows the desktop (Windows key + M: To only minimize) Win-ctrl-D: Add a virtual desktop Win-ctrl-Left/Right Arrow : Move between virtual desktop Win-ctrl-F4 : To close virtual desktop Win-Tab: Opens Task View, which shows all open windows and virtual desktops Alt + Tab: Switches between open windows Alt-Esc: Cycle between open windows quickly Selection CTRL + A to Select all CTRL + Click to select multiple individual items Shift + Click to select multiple items Shift + Arrow to select text Shift + CTRL + Arrow to select entire words Browser Navigation Alt + left or Alt + right arrow to navigate forward or back CTRL + T to open a new tab CTRL + Shift + T to bring up closed tab in browser CTRL + Tab to move to next tab CTRL + Shift + Tab to move to previous tab F5 or CTRL + R to refresh a web page Ctrl+L: To grab link Ctrl+Shift+L: To open last tab Others Windows + or Windows - : To zoom in or out Win-E: Opens File Explorer Win-L: Locks your computer Win-R: Opens the Run dialog box Win-S: Opens the Search bar Ctrl + Shift + Esc: Opens Task Manager Windows key + X: Opens the Quick Link menu ","permalink":"http://localhost:60822/Windows-Powerful-Shortcuts/","summary":"A computer is only powerful if a person use the computer in a powerful way. One of the powerful to navigate in windows is through shortcuts. Here are some time saving shortcuts that will make your workflow more productive.\nWindow Management Win-D: Minimizes all open windows and shows the desktop (Windows key + M: To only minimize) Win-ctrl-D: Add a virtual desktop Win-ctrl-Left/Right Arrow : Move between virtual desktop Win-ctrl-F4 : To close virtual desktop Win-Tab: Opens Task View, which shows all open windows and virtual desktops Alt + Tab: Switches between open windows Alt-Esc: Cycle between open windows quickly Selection CTRL + A to Select all CTRL + Click to select multiple individual items Shift + Click to select multiple items Shift + Arrow to select text Shift + CTRL + Arrow to select entire words Browser Navigation Alt + left or Alt + right arrow to navigate forward or back CTRL + T to open a new tab CTRL + Shift + T to bring up closed tab in browser CTRL + Tab to move to next tab CTRL + Shift + Tab to move to previous tab F5 or CTRL + R to refresh a web page Ctrl+L: To grab link Ctrl+Shift+L: To open last tab Others Windows + or Windows - : To zoom in or out Win-E: Opens File Explorer Win-L: Locks your computer Win-R: Opens the Run dialog box Win-S: Opens the Search bar Ctrl + Shift + Esc: Opens Task Manager Windows key + X: Opens the Quick Link menu ","title":"Windows Powerful Shortcuts"},{"content":"What is Deep Learning? Deep learning is a subset of machine learning that includes training artificial neural networks with multiple layers to learn and make predictions or decisions based on input data. In deep learning, the neural network is designed to recognize patterns in large datasets by using algorithms to identify relationships between different variables. The term \u0026ldquo;deep\u0026rdquo; generally refers to the number of layers in the neural network, which can range from ten to even thousands. These neurons help process the input data and make the output.\nWhy Deep Learning Now? The term learning speaks for itself. Learning involves training. To train a model, we need data. In this day and age, data is available everywhere on the internet. Quality data is easier to get now than ever before. This training is not easy either. Many mathematical computations are done every second during the traning phase. To compute this, we need a significant amount of computation power. The rise of powerful GPU and CPU has made it easier. Some GPUs are designed specifically for training models. Software is not far behind in this regard. Programming languages like Python and libraries like PyTorch, TensorFlow, etc. have made it 100 times easier to make a model.\nPerceptron A deep learning model is made with thousands, if not millions, of neurons. A single neuron is called perceptron.\nA perceptron takes an input mutiplied with weight then we add it. That addition is added with a bias which is a scaler weight. Then it is passed through a non linear activation function. But why non linear activation function? It is because real world data are mostly non linear. And to calculate non linearity we need a non linear function. Bias here helps to shift the non linear activation function. There are many non linear activation function. One of the popular one is sigmoid function. It takes any any number as input in real number line and gives output 0 to 1 likely a threshold function. Some more popular non linear activation functions are Hyperbolic Tangent and Rectified Linear Unit.\nLoss function In deep learning, the goal is to use a neural network to approximate a function that maps input data to output values. This approximation is learned by minimizing a loss function using a technique called backpropagation. the loss function is first computed for a given input to the network and then the gradient of the loss function with respect to each parameter in the network is calculated using the chain rule of calculus.\nThe gradients are then propagated back through the layers of the network, starting from the output layer and moving backwards towards the input layer. At each layer, the gradients are used to update the parameters of the layer using an optimization algorithm such as stochastic gradient descent.\nBy iteratively updating the parameters of the network using backpropagation, we can minimize the loss function and train the network to make accurate predictions on new data. In machine learning, the loss function is a measure of how well a model\u0026rsquo;s predictions match the ground truth (actual) values. The goal during training is to minimize this loss function, which results in the model making more accurate predictions.\nOne commonly used loss function for classification problems is softmax cross-entropy. This loss function is typically used when the output of the model is a probability distribution over multiple classes.\nThe softmax function takes a vector of arbitrary real-valued scores and squashes it into a vector of probabilities that add up to 1. The softmax function is defined as:\n$$ \\text{softmax}(z_i) = \\frac{\\exp(z_i)}{\\sum_j \\exp(z_j)} $$\nwhere $z$ is a vector of real-valued scores, and $i$ and $j$ are indices that iterate over the elements of the vector.\nThe cross-entropy loss function measures the difference between the predicted probability distribution and the true probability distribution. It is given by:\n$$ \\mathcal{L} = -\\sum_{i=1}^{n} y_{i} \\log(\\hat{y}_{i}) $$\nwhere $n$ is the number of classes, $y$ is a one-hot encoded vector representing the true class label, and $\\hat{y}$ is the predicted probability distribution over the classes.\nTo understand this equation, let\u0026rsquo;s consider an example. Suppose we have a classification problem with three classes, labeled A, B, and C. We want to predict the probability of each class given some input data. Let\u0026rsquo;s say our model predicts the following probabilities:\n$$ \\hat{y} = [0.3, 0.4, 0.3] $$\nand the true label is B. We can represent the true label as a one-hot encoded vector:\n$$ y = [0, 1, 0] $$\nUsing the softmax cross-entropy loss function, we can compute the loss as follows:\n$$ \\begin{align} \\mathcal{L} \u0026amp;= -\\sum_{i=1}^{3} y_i \\log(\\hat{y}_i) \\ \u0026amp;= -[0 \\cdot \\log(0.3) + 1 \\cdot \\log(0.4) + 0 \\cdot \\log(0.3)] \\ \u0026amp;= -\\log(0.4) \\ \u0026amp;= 0.916 \\end{align} $$\nThe goal of training is to minimize this loss function by adjusting the parameters of the model. By computing the gradients of the loss function with respect to the model parameters using backpropagation, we can update the parameters and improve the model\u0026rsquo;s accuracy.\n","permalink":"http://localhost:60822/Introduction-to-Deep-Learning/","summary":"What is Deep Learning? Deep learning is a subset of machine learning that includes training artificial neural networks with multiple layers to learn and make predictions or decisions based on input data. In deep learning, the neural network is designed to recognize patterns in large datasets by using algorithms to identify relationships between different variables. The term \u0026ldquo;deep\u0026rdquo; generally refers to the number of layers in the neural network, which can range from ten to even thousands.","title":"Introduction to Deep Learning"},{"content":"In the last article we learned about git stage, commit, stash, reset and remove now we will move to some other commands to give this series a proper ending for basic idea and to get starting.\nGoing back a commit This is essentially destroying history. So be cautious of this one.\nIf we want a to go back to one commit behind or we want to delete a commit - git reset --hard HEAD~1 To revert to a specfic commit - git reset commit_id - git revert commit_id Then if we want to push that to remote (origin) - git push -f origin main checking a previous commit If we want to go back and just check a commit then - git checkout commit_id We cannot work while in this checkout mode After checking that commit and want to comeback to present - git checkout master Rebase Merge and rebase works in same way but with slight variation. Merge squashes all the commit and puts it as one commit in the branch. On the other hand rebase takes those commits and puts infront of the branch. Image below describes it well.\nIt helps to maintain a clear commit history rather than a messy one. But each has its own merits depending on circumstances.\nWe can rebase branches by using - git rebase dev - git rebase master After solving conflict - git rebase --continue To abort a rebase - git rebase --abort More on rebase here\nBranching Branching is literally what we see in a tree. From the main body, it branches out, holding the same properties as the tree, but it may contain modifications or it may just help test new features without tampering with the main base.\nTo check branch number - git branch (star mark indicates the current brunch I\u0026rsquo;m working in) To creat a branch - git branch branchName To switch to a different branch - git checkout branchName - git switch branchName After creating a branch suppose we add a file to that branch and stage + commit it. If we now switch it to the master we won\u0026rsquo;t see the file in file manager. - git branch dev - git checkout dev - create a file through file manager or add any file - git add . - git commit -m \u0026quot;added\u0026quot; - git checkout master Making branch from a specific commit - git branch branch_name commit_id Merging Lets say there is two branches. One is master and other one is dev. Master branch has two files. one.txt and two.txt . Dev branch has same file as it was branched from master. We are in dev branch and add a file named three.txt and we stage and commit it. After that we switch to master and add 2 in two.txt and commit it. Now again we switch to dev. and we will merge master and dev to together in dev. Command will be - git merge master -m \u0026quot;message\u0026quot; As we added 2 in two.txt now dev branch will have that two in two.txt . We will now switch to master and merge dev into master. - git checkout dev - git merge dev -m \u0026quot;message\u0026quot; The file from three.txt now will come to master bringing both the branch to upto date with eachother.\nmerge with conflict When same file and same line is changed from two side while merging it will create conflict. Conflict should be removed manually by checking the places.\nTo abort a merge - git merge --abort Push, fetch and pull To understand in simple terms\nPush helps to push the local repo to the remote repo. It is a good practice to do pull before pushing.\nFetch will note the change and it will reflect on local repo but to see those file in file manager or working directory we will need pull. Pull will bring the back the change from remote to working director. Now the commands\ngit push - git push origin master - git push origin dev\ngit fetch\nTo bring the changes. - git fetch If we want to reflect those on working directory then - git merge git pull\ngit pull It will do fetch and merge together and directly reflect the change in working directory. Learn more These were some of the commands that are very important for a beginner to learn. After this there are much more commands and flags to learn. To dive deep check out the git documentation.\n","permalink":"http://localhost:60822/Basics-of-git-2/","summary":"In the last article we learned about git stage, commit, stash, reset and remove now we will move to some other commands to give this series a proper ending for basic idea and to get starting.\nGoing back a commit This is essentially destroying history. So be cautious of this one.\nIf we want a to go back to one commit behind or we want to delete a commit - git reset --hard HEAD~1 To revert to a specfic commit - git reset commit_id - git revert commit_id Then if we want to push that to remote (origin) - git push -f origin main checking a previous commit If we want to go back and just check a commit then - git checkout commit_id We cannot work while in this checkout mode After checking that commit and want to comeback to present - git checkout master Rebase Merge and rebase works in same way but with slight variation.","title":"Basics of Git: Part Two"},{"content":"Git in a nutshell What is git? Ans: Git is a program that constantly scans the file for changes and records them in order to create a version of those changes. That is why it is known as a version control system or version control tool. Flow of github Ans: There are different github with different flags to do many task. But here we mainly focusing on the basic git commands. One of the basic command is status command to check on the repository.\nTo see what have changed - git status We now will discuss about the various command for each stage of a project.\nStaging A staging step in git allows you to continue making changes to the working directory, and when you decide you wanna interact with version control, it allows you to record changes in small commits.\nTo add something to stage - git add --all - git add --A Reset the staged changes - git reset add things to stage from current directory (not all) - git add . add things but ignore or not stage the deleted one - git add * add specific file - git add one.txt - git add myFolder/one.txt add specific file types such as .txt or .js or .py - git add *.js - git add *.txt Commiting the changes commit the changes in stage - git commit - git commit -m \u0026quot;message for the commit\u0026quot; From commit to unstage - git reset HEADS~ After this command changes have to be stagged then commit again From commit to stage - git reset --soft HEAD~1 Stashing the changes Lets say you are working and you have to switch branch but you don\u0026rsquo;t wanna commit. you can use stash command to stash away the chanages. Commands will be: - git stash Say we switched branches and done our work their and comeback. We want to see those stashed away lines we can use - git stash pop Similarly, you can use - git stash apply This will apply whatever is stashed away, without removing it from the stash. This can be helpful if you wan to apply stashed changes to multiple branches. Multiple stash can be created and we can see the stash list command to see the stash list - git stash list To include untracked files in to the stash we use - git stash -u Reset \u0026amp; Removing If some file are deleted manually and it gets staged/commited and if we use - git reset it will roleback the change in git but not in the directory itself. Let\u0026rsquo;s say that there are text files, one.txt and two.txt and we delete two.txt and stage/commit it. Then we use git reset and show the status by git status we will see that delete have been reverted but file hasn\u0026rsquo;t restored to working directory. -To restore the file with git we have to use - git reset --hard We now will use git remove command to remove things from the repo. - git rm two.txt this will remove the file from the working directory and stage it simultaneously. If files are current with last commit and changes are made in some folder. If we remove it with git rm file.name it won\u0026rsquo;t let us delete becase changes to file.name was not stagged or commited. If we still want to delete it without change being stagged and commited we have to use \u0026ldquo;force delete\u0026rdquo; flag. The command wil be - git rm file.name -f This command remove files from your local git repository. The \u0026ndash;cached flag deletes the file from your git repository, it becomes an untracked file in your project folder. Note you have to commit the changes. - git rm --cached file.name In other words The Git rm –cached flag removes a file from the staging area. The files from the working directory will remain intact. This means that you’ll still have a copy of the file locally. The file will be removed from the index tracking your Git project. Let’s remove the settings.json working tree file from our repository but keep it in our project directory: - git rm --cached settings.json When we push our next commit, the settings.json file will be removed. As long as a file exists in your local working directory, you can add it back to your Git repository. You can do so using the git add command. My take: Deletes the file from local and untracks it in the working directory.\nTo delete a folder within a folder recursively, we use git rm -r foldername There are more basic commands. Which will be discussed in another article. If you are interested and want to learn more and want to go in depth of git check the Git Documentation\n","permalink":"http://localhost:60822/Basics-of-git-1/","summary":"Git in a nutshell What is git? Ans: Git is a program that constantly scans the file for changes and records them in order to create a version of those changes. That is why it is known as a version control system or version control tool. Flow of github Ans: There are different github with different flags to do many task. But here we mainly focusing on the basic git commands.","title":"Basics of Git: Part One"},{"content":"When it comes to learning, the definition is the first thing we are taught about a subject matter. It is the fundamental component of understanding any concept or matter. But do we really know what the definition of definition is? The term \u0026ldquo;definition\u0026rdquo; is thought to be innate, but we must dissect it to understand its impact on our lives.\nDefining “Definition” To define \u0026ldquo;definition,\u0026rdquo; keep in mind that it must be defined without the use of the word itself we are trying to define. In essence, definition is an attempt to make something clear. It is the fundamental framework through which we understand any idea or matter.\nOur Mental Language We have many languages that we speak as humans, but everyone has a different mental language, or subconscious language. Every word we say has a mental meaning that connects something to a visual element. spelled spelled spelled spelled spelled spelled spelled spelled spelled the word spelled the words This means that we have evolved and developed the mental capacity to comprehend things without the use of visual cues.\nThe Impact of Understanding Definition Our understanding of things should not be limited to the definability of a definition. To truly comprehend its significance, we must reflect on and follow it. Consider the oath we used to take during morning assemblies. One of the oath\u0026rsquo;s sentences was, \u0026ldquo;We will not do injustice or corruption, nor will we tolerate it.\u0026rdquo; Our society, however, has become so tolerant that we now tolerate injustice and corruption. This level of tolerance effectively silences us from speaking up. If we do not follow the definition of a good citizen, we are not communicating the truth and making things clear. This is how the definition affects our lives.\nConclusion In conclusion, understanding any idea or matter begins with its definition. It is an attempt to clarify something and should be defined without the use of synonyms for the word itself. Our understanding of things should not be limited by the definability of a definition. It should be considered and followed in order to fully comprehend its significance in our lives. By adhering to the definition, we can strive to convey the truth and make things clear.\n","permalink":"http://localhost:60822/definition/","summary":"When it comes to learning, the definition is the first thing we are taught about a subject matter. It is the fundamental component of understanding any concept or matter. But do we really know what the definition of definition is? The term \u0026ldquo;definition\u0026rdquo; is thought to be innate, but we must dissect it to understand its impact on our lives.\nDefining “Definition” To define \u0026ldquo;definition,\u0026rdquo; keep in mind that it must be defined without the use of the word itself we are trying to define.","title":"The Importance of Understanding the Definition "},{"content":"Introduction What is the purpose of using a computer? If we ask this simple question, we will realize that we use it to do tasks. But those tasks are done using computers because of their ease of use. For example, we do our assignments or document our work using various programs like Microsoft Office, OnlyOffice, LibreOffice, Google Docs, etc. Well, those are programs or applications we use. Those programs or applications are made using programming languages. As humans, we speak different languages. Similarly, there are different programming languages. But why are there so many different languages? Won\u0026rsquo;t it be easy if there is only one programming language? Well, it surely would be. But different languages have different strengths and weaknesses. Some languages are better suited for front-end development, others for back-end development, still others for application development, and so on. Talking to the computer Now, if we think more deeply, the question will arise: how can computers understand our languages? In simple words, it doesn\u0026rsquo;t understand our languages. It only understands its own language. which is machine language. Programming languages come into play here. Programming languages are like an intermediary. Think of it as when we try to speak with a person who speaks a different language; someone who understands what I say and what the other person says can do the intermediary task of translating it between the two people. Similarly programing languages do the same job between us and the machine. We write in a certain programming language, which a compiler compiles and translates to machine language to do what we have ordered it to do.\nElements of language Like anyother languages, whether it be programming or human language it has follow language elemants. Which are:\nAn alphabet is a set of symbols used to construct words in a specific language (e.g., the Latin alphabet for English, the Cyrillic alphabet for Russian, Kanji for Japanese, and so on). If we translate it into programming, a program needs to be written in a recognizable script. A lexis (also known as a dictionary) a collection of words that a language provides to its users (for example, the word \u0026ldquo;computer\u0026rdquo; appears in the English language dictionary, but \u0026ldquo;cmoptrue\u0026rdquo; does not; the word \u0026ldquo;chat\u0026rdquo; appears in both the English and French dictionaries, but their meanings differ). For programming each programming language has its own dictionary, which you must learn. Fortunately, it is much simpler and smaller than any natural language dictionary; A syntax is a set of rules (formal or informal, written or intuitively felt) used to determine whether a particular string of words forms a valid sentence (for example, \u0026ldquo;I am a python\u0026rdquo; is a syntactically correct phrase, whereas \u0026ldquo;I a python am\u0026rdquo; is not). In case of programming each language has its rules and they must be obeyed; Semantics a set of rules that determines whether a phrase makes sense (for example, \u0026ldquo;I ate a doughnut\u0026rdquo; makes sense but \u0026ldquo;A doughnut ate me\u0026rdquo; does not). In case of programming the written program has to make sense. Types of execution Now we assume that we learned a programming language and followed the mentioned elements to write a programm. The written text and files for the program can be noted as the source code. There are two different ways of transforming a program from a high-level programming language into machine language. One is called compilation and interpretation.\nCompilation The source program is translated once. However, this must be repeated each time modifications are made to the source code. After compilation, a file or multiple files are generated containing the machine code. Now you can distribute the file or files worldwide; the program that performs this translation is called a compiler or translator.\nInterpretation Any user of the code can translate the source program each time it needs to be run; the program that performs this type of transformation is known as an interpreter, since it interprets the code each time it is supposed to be executed. It also means that you cannot simply distribute the source code because the end user did require the interpreter to run it.\nSummary To summarize the whole procedure, we can say that to do a task on a computer, a program or application is needed. That application or program is a product of a written text file using a desired programming language. Those written text file or files are converted to machine-readable form, also known as \u0026ldquo;binary.\u0026rdquo; That binary can be executed to run that application.\n","permalink":"http://localhost:60822/Programming-Language-and-How-Its-Run/","summary":"Introduction What is the purpose of using a computer? If we ask this simple question, we will realize that we use it to do tasks. But those tasks are done using computers because of their ease of use. For example, we do our assignments or document our work using various programs like Microsoft Office, OnlyOffice, LibreOffice, Google Docs, etc. Well, those are programs or applications we use. Those programs or applications are made using programming languages.","title":"Programming Language and How Its Run"},{"content":"Powershell What exactly is PowerShell? Powershell is a task automation solution as well as a command line shell. Similar programs include bash, zsh, and others. PowerShell, on the other hand, is now cross-platform. It is now available for download on Windows, Mac, and Linux. This increases its versatility. But one thing people are afraid of is the command line. Powershell can only be run from the command line. So why not make it more appealing to use? We are drawn to beautiful things as humans. Furthermore, rather than using a graphical user interface, powershell allows you to perform many tasks quickly. So, if we make the terminal more appealing, we will be able to encourage more people to use it. We can now start thinking about how to improve it.\nPowershell Designing Install Terminal Install new powershell Install any Nerd Fonts https://www.nerdfonts.com/ Install oh-my-posh https://ohmyposh.dev/docs/installation/windows or winget install oh-my-posh Create powershell $PROFILE in Documents Goto Documents Make a folder name PowerShell Make a ps1 script name Microsoft.PowerShell_profile.ps1 Open and paste\noh-my-posh init pwsh --config \u0026quot;$env:POSH_THEMES_PATH\\jandedobbeleer.omp.json\u0026quot; | Invoke-Expression To replace the default config we need to find the config folders first. To find the config folder we can search up in terminal by dir ~/jandedobbeleer.omp.json /s Usually the directory is C:\\Users\\username\\AppData\\Local\\Programs\\oh-my-posh\\themes If we like to change it, it will be like oh-my-posh init pwsh \u0026ndash;config \u0026ldquo;$env:POSH_THEMES_PATH\\powerlevel10k_rainbow.omp.json\u0026rdquo; | Invoke-Expression We can also download configs from github and run them similarly For Terminal Icons If we like to have icons for folders in terminal then we need to - Run this command first in terminal Install-Module -Name Terminal-Icons -Repository PSGallery - Then to load it everytime we need to include it in the powershell profile. So we need to edit the profile and include Import-Module -Name Terminal-Icons\nNow we need to reload or load the profile by typing .$PROFILE\nFor history and auto completion If we want to enable auto completion and command history with listview then following things needs to be done.\nInstall-Module PSReadLine -AllowPrerelease -Force type this in terminal Include this lines powershell profile Import-Module PSReadLine Set-PSReadLineOption -PredictionSource History Set-PSReadLineOption -PredictionViewStyle ListView Set-PSReadLineOption -EditMode Windows Set-PSReadLineKeyHandler -Key Tab -Function Complete Now load the profile again by typing .$PROFILE Good to go ","permalink":"http://localhost:60822/powershell-customization/","summary":"Powershell What exactly is PowerShell? Powershell is a task automation solution as well as a command line shell. Similar programs include bash, zsh, and others. PowerShell, on the other hand, is now cross-platform. It is now available for download on Windows, Mac, and Linux. This increases its versatility. But one thing people are afraid of is the command line. Powershell can only be run from the command line. So why not make it more appealing to use?","title":"Powershell Customization"},{"content":"Introduction Latches and flip-flops play important roles in the building of digital CMOS circuits. Timing elements such as flip-flops and latches in addition to the building blocks of any clocking system, form the most important components in synchronous VLSI system. Moreover, the key signal in all synchronous systems is the apparent clock and clock signal is normally heavily loaded by all the latches and flip-flops in the chip, and by the clock distribution network that covers the whole chip. Lastly, although the activity ratio of the clock signal is unity, the interconnection length of the clock trees has been increasing radically. The design trend is thus to increase the pipeline stages for high throughput, and this has prompted the increased in the number of latches and flip-flops in a chip.\nLatches and flip-flops must ensure low latency because of the tight timing budget in GHz operations. Power requirement is also becoming increasingly important since the power consumption increases linearly with clock frequency while the power budget of high-performance portable digital systems is severely limited. In power constrained systems, the power efficiency of latches and flip-flops is therefore pivotal. As a result, it is important to trim down the power consumptions in the clock trees, latches and flip-flops.\nCircuit Operation TRANSMISSION-GATE BASED FLIP-FLOP This is a positive level-sensitive latch (transparent when CLK = 1 and in hold for CLK = 0).When the CLK is HIGH, TG1 turns on and D input is passed to the output. Otherwise the latch will go into hold mode (CLK = LOW). The TGATE latch is commonly used as a basis for flip-flop design in standard CMOS cell libraries. However, the TGATE latch consumes relatively high clock power and this would imply a considerable number of clocked transistors in heavily pipelined circuits, which is another drawback of such a design.\nSchematic Output Layout MODIFIED C2MOS FLIP-FLOP: Because of the involvement of clocked inverters , this structure is called a C2MOS latch . The dynamic C2MOS latch is modified to a pseudo-static C2MOS latch by adding a C2MOS feedback at the output. It has a small clock load that is made possible by the local clock buffering, and a low-power feedback holding circuit, to secure a fully static operation. However, owing to the two PMOS transistors that are put in series at the pull-up section, the circuit suffers slow rise time.\nLayout Output Layout NAND-KEPEER PULSED FLIP-FLOP The basic difference between NAND keeper latch and flip-flop is that, the CLK input is replaced with an edge-triggered pulse train. When the input D is at a logic LOW value during the HIGH clock level, the internal node X will be a HIGH logic value, driving output Q to a LOW. Alternatively if the input D is HIGH at the positive clock level, node X will transit to a LOW value and the output Q will be pulled to HIGH.\nSchematic Output STATIC DIFFERENTIAL PULSED FLIP-FLOP It is a positive latch as that changes of the input value can be transmitted to the output when the CLK is HIGH. When the input D is HIGH at the positive clock level, output Q and QB will be at HIGH and LOW, respectively. This circuit employs cross-coupled inverters (M1, M2, M3 and M4) to keep the output during clock LOW level.\nSchematic Output Layout Comparison Between Flip-Flops Flip-Flops Uses Drawbacks Tgate Used as a basis for flip-flop design in standard CMOS cell libraries Consumes relatively high clock power C2MOS Secure static operation Suffers slow rise time NAND Storage devices The capacitive load will be larger DIFF LATCH Ecross-coupled inverters to keep the output during clock LOW level Double input and output capacitive load ## Conclusion\rWe have analyzed different latches and flip-flops. The classic transmission-gate-based master-slave flip-flop is realized by using two complementary gate latches operating on complementary clocks. The second topology, flip-flop constructed using C2MOS latch. Then both NAND-keeper flip-flop \u0026amp; static differential pulsed flip-flop are dual edge-triggered flip-flop designs since they employ external dual pulse generator. Total power of TGATE flip-flop is comparatively lower than other circuits. So, it will show high performances in various applications. The differences among these four circuits are: First two circuits don’t have external dual pulse generator, we used CLK only as multiple times input and on the other hand second two circuits have external dual pulse generator to which the CLK passes through .\n","permalink":"http://localhost:60822/Static-Latch-and-Low-Power-Flip-Flop/","summary":"Introduction Latches and flip-flops play important roles in the building of digital CMOS circuits. Timing elements such as flip-flops and latches in addition to the building blocks of any clocking system, form the most important components in synchronous VLSI system. Moreover, the key signal in all synchronous systems is the apparent clock and clock signal is normally heavily loaded by all the latches and flip-flops in the chip, and by the clock distribution network that covers the whole chip.","title":"Static Latch and Low Power Flip Flop"},{"content":"Introduction Nowadays, the use of private vehicles is very common, so the number of vehicles on the road is increasing exponentially. Roads without supervision or guidance can lead to traffic jams and accidents. Traffic lights are signaling devices used to control the flow of traffic. The traffic lights will provide directions to users (drivers and pedestrians) through lights displaying standard colors. The three colors used for traffic lights are (red, yellow and green). This system should be used to control traffic lights to ensure smooth and safe traffic.\nProject Objective In this project a traffic light controller system based on Arduino is designed for double pathway. It is a simple implementation of a traffic control management.\nProject appliances Required Appliances\nMethodology A brief description about the setup and working methods of these two systems is attached below :\nDouble pathway Traffic Management In this case, the traffic control of two opposite Lanes is designed. 6 LEDs (3 for each lane), 2 LCDs, and 4 7-segments are required to design the circuit. A brief discussion on the circuit setup and whole working method is discussed below:\nCircuit Setup: 2 LCDs are connected to the Arduino through I2C Buses of respective Slave Address (0x27 and 0x20). 2 counters (1 for each lane) are set by 7-segment to show the interval of different phases. 2 pairs of Red, Green, and Yellow are connected to the Arduino to indicate the vehicles of two lanes whether they have to move, stop, or stop their engine for certain period. Working Algorithm: Both the LEDs and LCDs will indicate respective directions such that, when vehicles in one lane is moving, the other will stop. So, when RED light blinks in first lane, GREEN light blinks on second. Pedestrians can move only when the vehicles are stopped otherwise they can go and cross the road. After a particular interval, the green and red lights stops and Yellow light turns on for a certain time. Now, vehicles of first lane have to Stop the engine and vehicles of second lane have to Start them as displayed on the LCD. Finally, Green light blinks on the second lane and indicates its vehicles to move while pedestrians have to stop. On the contrary, Red light on the first lane its pedestrians to move and vehicles to stop. This whole scenario is repeated simultaneously to control a safe and organized traffic management for 2 pathway. Proteus Simulation Diagram Simulation Using Proteus\nCode #include \u0026lt;LiquidCrystal_I2C.h\u0026gt;\rLiquidCrystal_I2C lcd1(0x27, 16, 2);\rLiquidCrystal_I2C lcd2(0x20, 16, 2);\rbyte LUT[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};//0 to 9\r#define G1r2 8\r#define Y1y2 9\r#define R1g2 10\r#define C1 11\r#define C2 12\rint i, j;\rvoid setup() {\rDDRD = 0xFF;\rDDRB = 0xFF;\rlcd1.init();\rlcd1.backlight();\rlcd2.init();\rlcd2.backlight();\r}\rvoid loop() {\rfor (j = 2; j \u0026gt;= 0; j--)\r{\rlcd1.setCursor(2, 0);\rlcd1.print(\u0026#34;Vehicles-GO!\u0026#34;);\rlcd1.setCursor(0, 1);\rlcd1.print(\u0026#34;Pedestrians-Stop\u0026#34;);\rlcd2.setCursor(1, 0);\rlcd2.print(\u0026#34;Vehicles-STOP!\u0026#34;);\rlcd2.setCursor(1, 1);\rlcd2.print(\u0026#34;Pedestrians-Go\u0026#34;);\rdigitalWrite(Y1y2, LOW);\rdigitalWrite(G1r2, HIGH)\rfor ( i = 9; i \u0026gt;= 0; i--)\r{\rfor (int k = 0; k \u0026lt; 100; k++) //delay=(5+5)*100=1000ms\r{\rdigitalWrite(C1, LOW);\rdigitalWrite(C2, HIGH);\rPORTD = LUT[j];\rdelay(5);\rdigitalWrite(C1, HIGH);\rdigitalWrite(C2, LOW);\rPORTD = LUT[i];\rdelay(5);\r}\r}\rlcd1.clear();\rlcd2.clear();\r}\rfor ( i = 5; i \u0026gt;= 0; i--)\r{\rlcd1.setCursor(0, 0);\rlcd1.print(\u0026#34;Stop The Engine\u0026#34;);\rlcd2.setCursor(0, 0);\rlcd2.print(\u0026#34;Start The Engine\u0026#34;);\rdigitalWrite(G1r2, LOW);\rdigitalWrite(Y1y2, HIGH);\rfor (int k = 0; k \u0026lt; 100; k++)\r{\rdigitalWrite(C1, LOW);\rdigitalWrite(C2, HIGH);\rPORTD = LUT[0];\rdelay(5);\rdigitalWrite(C1, HIGH);\rdigitalWrite(C2, LOW);\rPORTD = LUT[i];\rdelay(5);\r}\rlcd1.clear();\rlcd2.clear();\r}\rfor (j = 2; j \u0026gt;= 0; j--)\r{\rlcd1.setCursor(0, 0);\rlcd1.print(\u0026#34;Vehicles-STOP!\u0026#34;);\rlcd1.setCursor(0, 1);\rlcd1.print(\u0026#34;Pedestrians-Go\u0026#34;);\rlcd2.setCursor(2, 0);\rlcd2.print(\u0026#34;Vehicles-GO!\u0026#34;);\rlcd2.setCursor(0, 1);\rlcd2.print(\u0026#34;Pedestrians-Stop\u0026#34;);\rdigitalWrite(Y1y2, LOW);\rdigitalWrite(R1g2, HIGH);\rfor ( i = 9; i \u0026gt;= 0; i--)\r{\rfor (int k = 0; k \u0026lt; 100; k++)\r{\rdigitalWrite(C1, LOW);\rdigitalWrite(C2, HIGH);\rPORTD = LUT[j];\rdelay(5);\rdigitalWrite(C1, HIGH);\rdigitalWrite(C2, LOW);\rPORTD = LUT[i];\rdelay(5);\r}\r}\rlcd1.clear();\rlcd2.clear();\r}\rfor ( i = 5; i \u0026gt;= 0; i--)\r{\rlcd1.setCursor(0, 0);\rlcd1.print(\u0026#34;Start The Engine!\u0026#34;);\rlcd2.setCursor(0, 0);\rlcd2.print(\u0026#34;Stop The Engine\u0026#34;);\rdigitalWrite(R1g2, LOW);\rdigitalWrite(Y1y2, HIGH);\rfor (int k = 0; k \u0026lt; 100; k++)\r{\rdigitalWrite(C1, LOW);\rdigitalWrite(C2, HIGH);\rPORTD = LUT[0];\rdelay(5);\rdigitalWrite(C1, HIGH);\rdigitalWrite(C2, LOW);\rPORTD = LUT[i];\rdelay(5);\r}\rlcd1.clear();\rlcd2.clear();\r}\r} Project Implemtation The traffic light controller in this system can be implemented practically and could be expanded further This traffic light controller includes a crosswalk signaling system. Can be used in narrow junction point places such as “Old Dhaka” also in local housings of Dhaka. Underdeveloped countries can implement this at a low cost and can utilize their manpower of traffic police in other sectors. Limitation In case of port shortage, Arduino MEGA can be used Pedestrian input wasn’t considered In the time of maintenance alternative ways should be considered Conclusion In the following project, we tried to demonstrate the traffic control management system for a two way traffic. We implemented the circuit both in Protues and in hardware. We have used 7 Segment display for countdown and LCD display for indicating the traffic signs to both the pedestrians and the drivers. While implementing the project in hardware we faced some difficulties i.e. we could not use two LCDs due to having similar I2C slave address. This issue was not faced in proteus. If we implement this project in real life it will be very much cost efficient due to simple structure and installation. Any kind of traffic system won’t be fruitful unless people follow the rules.\n","permalink":"http://localhost:60822/Traffic-Control-System/","summary":"Introduction Nowadays, the use of private vehicles is very common, so the number of vehicles on the road is increasing exponentially. Roads without supervision or guidance can lead to traffic jams and accidents. Traffic lights are signaling devices used to control the flow of traffic. The traffic lights will provide directions to users (drivers and pedestrians) through lights displaying standard colors. The three colors used for traffic lights are (red, yellow and green).","title":"Traffic Control System"},{"content":"Introduction The Water Level Indicator employs a simple mechanism to detect and indicate the water level in an overhead tank or any other water container. The sensing is done by using water sensor . There are a lot of water sensor models available in the market like water sensor(china) model SEN-00235, Grove- water sensor model SEN-00042, water flow sensor model SEN-00043 etc. For this project we’ll use the water sensor (china) model SEN-00235 because it’s cheap \u0026amp; economical. The arduino uno is used for the project to run through coding. Water level indicator will inform the user about different level of water that a container is containing i.e, high/ average/ low . there is also a buzzer system attached to the circuit to let an user know when the container is full.\nEquipment Arduino Uno : Arduino uno is a microcontroller board based on the ATmega328P (datasheet). It has 14 digital input/output pins (of which 6 can be used as PWM outputs), 6 analog inputs, a 16 MHz ceramic resonator (CSTCE16M0V53-R0), a USB connection, a power jack, an ICSP header and a reset button.\nBreadboard : A breadboard is a solderless device for temporary prototype with electronics and test circuit designs. Most electronic components in electronic circuits can be interconnected by inserting their leads or terminals into the holes and then making connections through wires where appropriate.\nLED lights 3 (red, green, yellow) : In the simplest terms, a light-emitting diode (LED) is a semiconductor device that emits light when an electric current is passed through it\nBuzzer (x1) : A buzzer or beeper is an audio signaling device, which may be mechanical, electromechanical, or piezoelectric (piezo for short). Typical uses of buzzer \u0026amp; beepers include alarm devices, timers, and confirmation of user input such as a mouse click or keystroke.\nJumper wires : Jumper wires are simply wires that have connector pins at each end, allowing them to be used to connect two points to each other without soldering.\nWater level sensor (SEN-00235) : Water level sensor is an easy-to-use, cost-effective high level/drop recognition sensor, which is obtained by having a series of parallel wires exposed traces measured droplets/water volume in order to determine the water level. Easy to complete water to analog signal conversion and output analog values can be directly read development board to achieve the level alarm effect.\n220 ohms resistor (x3) : A resistor is a passive two-terminal electrical component that implements electrical resistance as a circuit element. In electronic circuits, resistors are used to limit current flow, to adjust signal levels, bias active elements, and terminate transmission lines among other uses.\nConnection Schematic Diagram\nSchematic Diagram\nProcedure Firstly we connect the arduino with laptop or pc and then using power cable . Then we upload the prepared code using Arduino IDE.\nSecondly, we select 3 different color LED ( Red, Green \u0026amp; Yellow ) . Then we connect the cathode of each led to power rail(blue rail) on breadboard which would be the ground supply and we connect the anode of LED\u0026rsquo;s to different nodes . After that we select 220 ohm resistance and connect them with the LEDs in series connection. Now we will connect those LEDs with Arduino . Red LED is connected with the digital pin 13 , yellow with digital pin 12 and green with digital pin 11. For this connection we have used male to male jumper wire.\nThirdly, We now select the sensor and connect the S pin with arduino’s A_0 pin , sensor’s positive pin will go with arduino’s 5V pin and lastly negative pin will go with arduino’s ground. All this connection was made with male to female jumper wire.\nLastly, will connect the buzzer with Digital pin 8 and ground the other leg of the buzzer. Now the whole circuit is complete to run. Now we will take a glass and put the sensor in the glass. And give a power supply to the arduino. Then we will slowly pour the water. As we pour the water, when the water is touching the sensor in its lower part then the red light will turn on. As we pour the water when it touches the middle part of the sensor yellow LED will turn on and similarly when the water level reaches the upper part then the green LED will turn on. And every level has its own value to determine the led on off.\nCode int level;\rconst int analog_0=0;\rint l1=13;\rint l2=12;\rint l3=11;\rint l4=10;\rvoid setup() {\r// put your setup code here, to run once:\rSerial.begin(9600);\rpinMode(l1,OUTPUT);\rpinMode(l2,OUTPUT);\rpinMode(l3,OUTPUT);\rpinMode(l4,OUTPUT);\rpinMode(8,OUTPUT);\r}\rvoid loop() {\r// put your main code here, to run repeatedly:\rlevel=analogRead(analog_0);\rSerial.println(level);\rif(level\u0026gt;500\u0026amp;\u0026amp;level\u0026lt;550)\r{ digitalWrite(l1, HIGH);\rdigitalWrite(l2, LOW);\rdigitalWrite(l3, LOW);\rdigitalWrite(l4, LOW);\r}\relse if(level\u0026gt;600\u0026amp;\u0026amp;level\u0026lt;620)\r{\rdigitalWrite(l1, LOW);\rdigitalWrite(l2, HIGH);\rdigitalWrite(l3, LOW);\rdigitalWrite(l4, LOW);\r}\relse if(level\u0026gt;620\u0026amp;\u0026amp;level\u0026lt;630)\r{\rdigitalWrite(l1, LOW);\rdigitalWrite(l2, LOW);\rdigitalWrite(l3, HIGH);\rdigitalWrite(l4, LOW);\r}\relse if(level\u0026gt;630\u0026amp;\u0026amp;level\u0026lt;650)\r{\rdigitalWrite(l1, LOW);\rdigitalWrite(l2, LOW);\rdigitalWrite(l3, LOW);\rdigitalWrite(l4, HIGH);\rdigitalWrite(8, HIGH);\r}\r} Working Principle There are several type of sensors detection but the most simple detects the presence of water by its conductivity. Tap water contains dissolved ions that permit conduct of electricity (pure distilled water won’t conduct electricity).\nWater Level\nThe sensor is generally a set of parallel wires, one set connected to a positive power source such as a battery and the other to a negative source. The two sets of wires do not touch, so no current flows between them. But when the sensor gets wet, a current will flow between the positive and negative wires. In this process, if resistance is high, current flow will be low \u0026amp; vice versa. The more we immerse the sensor the more the flow of current will be obtained cause as we’re immersing the sensor the value of resistance getting decreased.\nBy this method it sends signal to the arduino . Aduino has two parts. One is the hardware another part is the software. Hardware part takes the signal from the sensor and that received value is run through the code to give indication for our output. Now arduino sends signal to the bread board to turn on the required light for high/average/low water level indication. And if the water level exceeds the high level mark then the buzzer will turn on automatically for the arduino coding function.\nApplications and Usage The water level indicator is used in many sectors. Though it seems to be a very simple project, it plays a vital role in water saving. Some of the main applications are\nThe water level indicator is used in hotels and home apartments, in commercial complexes and in factories. It is used in residential and commercial swimming pools. It is used as fuel level indicators in vehicles. It is used in water tanks to indicate the water level. It is also used in steam level monitoring. The water level indicator can be used in many other ways such as\nTo start and stop water pumps (We didn’t use the code here). In open wells. Where cooling towers are used. Tsunami warning and sea level monitoring and any other ways where water levels need to be monitored and controlled. Advantages and Disadvantages Advantages: There are many advantages of water level indicators. Some of them are described below.\nMaintenance: Water level indicators need a very little maintenance. Anybody can hear the buzzer when the water reaches maximum level and control.\nInstallation: it is easy to install and everyone can understand how to use it. It has a compact and good design.\nMoney saver: It helps save money by limiting the waste of water and electricity. We can easily switch off the power supply when we hear the buzzer. So there’s no wastage of water and electricity. Again, for automatic indicators/controllers it limits the unnecessary water/electricity usage and overtime the money saved is quite substantial.\nPower saver: The water level indicator is ideal at saving power. Usually, regulating water levels can consume electricity and wastewater. However, with automatic controllers, the electricity usage is limited as well as less water needed to regulate supply.\nWater maximization: It can maximize the water used in appropriate time while automatically lessening the water used at idle time.\nDisadvantages: There are some disadvantages of water level indicators.\nIt needs to be replaces after a year or two. There is no guarantee of the LED lights. The electronic devices may be damaged easily. This project may not be able to handle high power. Discussion In the following project we’ve tried to demonstrate water level indication through arduino uno and water sensor. The project was done very carefully so that none of the equipments get damaged and the circuit setup was done with proper caution and safety . This project and it’s function related to it is used worldwide specially in green house to measure the moisture, rain level detection, fuel level detection in tanker etc. Though this project has got some drawbacks but still it is an economical and environment friendly project.\n","permalink":"http://localhost:60822/Water-Level-Detection/","summary":"Introduction The Water Level Indicator employs a simple mechanism to detect and indicate the water level in an overhead tank or any other water container. The sensing is done by using water sensor . There are a lot of water sensor models available in the market like water sensor(china) model SEN-00235, Grove- water sensor model SEN-00042, water flow sensor model SEN-00043 etc. For this project we’ll use the water sensor (china) model SEN-00235 because it’s cheap \u0026amp; economical.","title":"Water Level Detection"}]